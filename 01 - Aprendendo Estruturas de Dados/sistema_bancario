
def menu():
    menu = """
        ----------- MENU ----------- 
        | [d] Depositar            |
        | [s] Sacar                |
        | [e] Extrato              |
        | [nc] Nova conta          |
        | [lc] Listar contas       |
        | [nu] Novo usuário        |
        | [q] Sair                 |
        ----------------------------
    """
    return input(menu)

def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
        if valor > saldo:
            print("Operação falhou. Você não tem saldo suficiente.")

        elif numero_saques >= limite_saques:
            print("Você atingiu seu limite diário de saque.\nObrigado por utilizar nossos serviços!")

        elif valor > limite:
            print("Você ultrapassou o limite do valor do saque. Tente outro valor abaixo de R$ 500.00")

        elif valor > 0 and valor <= 500:
            saldo -= valor
            extrato += f"Saque: R$ {valor:.2f}\n"
            numero_saques += 1
            print("Saque sendo realizado...\nObrigado por utilizar nossos serviços!")

        else:
            print("Erro ao realizar a transação. Tente novamente mais tarde!")

        return saldo, extrato

def depositar(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: R$ {valor:.2f}\n"
        print("Depósito realizado. Obrigado por utilizar nossos serviços!")

    else:
        print("Valor inválido para depósito. Tente novamente!")

    return saldo, extrato

def exibir_extrato(saldo, /, *, extrato):
    print("\n----------- EXTRATO -----------")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo: R$ {saldo:.2f}")
    print("-------------------------------")


def criar_usuario(usuarios):
    cpf = input("Informe o CPF: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n@@@ Já existe usuário com esse CPF! @@@")
        return
    
    nome_completo = input("Nome completo: ")
    data_nascimento = input("Data de Nascimento dd/mm/yyyy: ")
    endereco = input("Endereço (Logradouro, Nº, Bairro, Cidade/Sigla Estado): ")

    usuarios.append({"nome": nome_completo, "data de nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})

    print("----------- USUÁRIO CRIADO COM SUCESSO! -----------")

def filtrar_usuario(cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n----------- CONTA CRIADA COM SUCESSO! -----------")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}
    
    print("\n--- Usuário não encontrado, fluxo de criação de conta encerrado! ---")

def listar_contas(contas):
    for conta in contas:
        linha = f"""\
            Agência: {conta['agencia']}
            C/C: {conta['numero_conta']}
            Titular: {conta['usuario']['nome']}
        """
        print("=" * 100)
        print(linha)

def main():

    LIMITE_SAQUES = 3
    AGENCIA = "0001"

    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 0
    usuarios = []
    contas = []

    while True:
        opcao = menu()
        
        if opcao == "d":
            valor = float(input("Informe o valor do depósito: "))

            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == "s":
            valor = float(input("Informe o valor do saque: "))

            saldo, extrato = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES,
            )

        elif opcao == "e":
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == "nu":
            criar_usuario(usuarios)

        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)
        
        elif opcao == "lc":
            listar_contas(contas)

        elif opcao == "q":
            break

        else:
            print("Operação inválida, por favor selecione novamente a operação desejada.")


main()
